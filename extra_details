TO run the terraform first you need to instilize it
and the below steps are to be performed only undert the terraform file (you should open the file then only you run the below commands)
>teraform init
will will check for the required plugins if not will download from the internet and it will also check the syntax

> terraform plan
this is going to show whats its going to create ...kind of showing result
and will see the errors are there, if you have.



>terraform apply
this will create the changes and you have accepted

or 
as you alredy seen the plan you can go like this 
terraform apply -auto-approve


>terraform destroy


# commands
  <!-- git pull
  696  terraform plan 
  697  terraform plan -var-file=dev.tfvars
  698  git pull
  699  terraform plan
  700  git pull
  701  terraform plan
  702  git pull
  703  terraform plan var-file dev.tfvars
  704  terraform plan var-file=dev.tfvars
  705  terraform planhistory --> -->

     $ terraform init     will initilize and download the plugins
    $ terraform plan        will check the syntax error and show what will be happed if you do the apply command 
    $ terraform apply -auto-approve   this will do the changes without asking approve
    terraform destroy -auto-approve   this will do the delete the changes without asking approve


we can export the var in CLI usign the below commands

export TF_VAR_region=us-west-1  (region is the empty var given in sample file)and us-west-1 is exported in the cli like  alis comand how we export.
export TF_VAR_ami=ami-049d8641
export TF_VAR_alist='[1,2,3]'

Below is the image for attributes and arguments
FYI 
when you run the terrafrom pla if you find there is + mens addinf someithing - mens deleting something
and this  ~ mena changing ex:  ~ "Name" = "HelloWorld" -> "HelloWorld-fromterraform"


Terraform
tf. state file is created on automaticlly on the teraform code file
It will check all the setup created by Terraform and if you done any changes manually on the console and you try to apply the Terraform
Command

Then this terraform will compare the infra and code file and dedected and maunaull changes and revert as code infra (like terraform)
As it is very important they it will automaticall create another file for backup.



For interview :
> if you mention 

resource "aws_lb" "test" {
  name               = "test-lb-tf"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.lb_sg.id]
  subnets            = [for subnet in aws_subnet.public : subnet.id]

  enable_deletion_protection = true   ### this line menas the resource cant be deleted even you have given its as a terraform distroy -auto approve 
  to delete this you need to remove or false in the code then only you can distroy the resource...
